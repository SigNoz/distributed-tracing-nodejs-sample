version: "2.4"

x-envs: &envs
  depends_on:
    - mysql
  extra_hosts:
    - "signoz:host-gateway"
  environment:
    PAYMENTS_PORT: 8080
    USERS_PORT: 8081
    ORDERS_PORT: 8082
    PAYMENTS_HOST: payments
    USERS_HOST: users
    ORDERS_HOST: orders
    MYSQL_HOST: mysql
    MYSQL_PORT: 3306
    MYSQL_DATABASE: signoz
    MYSQL_USER: root
    MYSQL_PASSWORD: password
    OTEL_EXPORTER_OTLP_ENDPOINT: http://signoz:4318/v1/traces  # Replace `signoz` with SigNoz OTLP hostname, if SigNoz not running on host machine

services:
  mysql:
    image: mysql:8.0
    restart: always
    tty: true
    cap_add:
      - SYS_NICE
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_DATABASE=signoz
      - MYSQL_ROOT_PASSWORD=password
    # ports:
    #   - '3306:3306'

  # For running all the services in one container
  #
  # backend:
  #   image: "signoz/nodejs-distributed-tracing:backend"
  #   restart: always
  #   command: ["all"]
  #   # ports:
  #   #   - "8080:8080"
  #   #   - "8081:8081"
  #   #   - "8082:8082"
  #   <<: *envs

  payments:
    image: "signoz/nodejs-distributed-tracing:backend"
    restart: unless-stopped
    command: ["payments"]
    healthcheck:
      test: ["CMD", "wget", "-qO", "-", "http://localhost:8080/health"]
      interval: 5s
      timeout: 5s
      retries: 3
    # ports:
    #   - "8080:8080"
    <<: *envs
  users:
    image: "signoz/nodejs-distributed-tracing:backend"
    restart: unless-stopped
    command: ["users"]
    healthcheck:
      test: ["CMD", "wget", "-qO", "-", "http://localhost:8081/health"]
      interval: 5s
      timeout: 5s
      retries: 3
    # ports:
    #   - "8081:8081"
    <<: *envs
  orders:
    image: "signoz/nodejs-distributed-tracing:backend"
    restart: unless-stopped
    command: ["orders"]
    healthcheck:
      test: ["CMD", "wget", "-qO", "-", "http://localhost:8082/health"]
      interval: 5s
      timeout: 5s
      retries: 3
    # ports:
    #   - "8082:8082"
    <<: *envs
  
  frontend:
    image: "signoz/nodejs-distributed-tracing:frontend"
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./config.js:/usr/share/nginx/html/static/config.js
    depends_on:
      - payments
      - users
      - orders
